<?php
/** @file
 *
 *  View script for IndexController::index to render the sidebar content.
 *
 *  Incoming members:
 *      sidebarHelper   A View_Helper_HtmlSidebar instance configured with
 *                      (at least general) information about the sidebar;
 *
 *      url             The full url for the main controller of this page;
 *      owner           The owner of the current item set -- either a string or
 *                      a Model_User instance;
 *      viewer          The Model_User instance representing the current
 *                      viewer;
 *      tags            A Model_Set_Tag instance containing information about
 *                      any requested tags (i.e. tag restrictions);
 *
 */
if ($this->owner !== '*')
{
    /* Bookmarks for a single user are being presented.  The 'People' pane will
     * contain details about that user, generated via:
     *      View_Helper_HtmlSidebar->render()
     *          => application/views/scripts/index/sidebar-people.phtml
     *              => application/views/scripts/sidebar-user.phtml
     *                  => application/views/scripts/user.phtml
     *
     * Properly rendering a 'user' in the sidebar requires
     * 'css/bookmark-users.css', which can only effectively be included here
     * since sidebar-user.phtml, the most logical place to perform the include,
     * is currently included asynchronously, causing all headLink()
     * modifications to be ignored.
     */
    $this->headLink()
            ->appendStylesheet( $this->baseUrl('/css/bookmark-users.css') );

}

// Prepare the HTML Sidebar helper
//$htmlSidebar = $this->htmlSidebar( $this->sidebar );

/* Invoke the Html Sidebar View helper to render the sidebar based upon
 * settings in $this->sidebar established by IndexController::_prepareSidebar
 *
 * This will either render the sidebar partials immediately or setup
 * asynchronous loading, depending on $this->sidebar['async']
 */
echo $this->sidebarHelper->render('index/');
