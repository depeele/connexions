<?php
/** @file
 *
 *  Render the main settings page.
 *
 *  Incoming members:
 *      baseUrl         The base url for the main controller of this page
 *                      without any differentiating parameters
 *                      (e.g. tag restrictions);
 *      url             The full url for the main controller of this page
 *                      with differentiating parameters;
 *      viewer          The Model_User instance representing the current
 *                      viewer;
 *
 *      section         The settings section;
 *      cmd             The specific settings command;
 *      sections        An array of avaialble sections and commands of the
 *                      form:
 *                          {section: {
 *                              'title':    section title,
 *                              'script':   section render script
 *                              'cmds':     [
 *                                  {'title':   command title,
 *                                   'script':  command render script},
 *                                  ...
 *                              ],
 *                           },
 *                           ...
 *                          }
 */

$this->headTitle('Settings');

$this->headLink()->appendStylesheet($this->baseUrl('/css/settings.css'));

?>
<div class='columnHeader'>
 <div class='context-bg connexions_sprites settings_bg
             ui-corner-left ui-corner-tr'>&nbsp;</div>
 <p>Settings</p>
 <!-- p>Settings for <?= $this->viewer ?></p>
 <p class='userName'><?= $this->viewer->fullName ?></p -->
</div>
<div id='settings' class='settings'>
 <ul>
<?php
    $paneHtml    = '';
    $tabSelected = 0;
    $tabNum      = 0;
    foreach ($this->sections as $id => $section)
    {
        if ($id === $this->section)
        {
            $tabSelected = $tabNum;
        }

        /*
        $paneUrl = $this->view->url
                 .  '?format=partial'
                 .  '&part='. $section['script'];
        */
        $paneUrl = "#{$id}";
        $paneCss = (! empty($section['cssClass'])
                        ? $section['cssClass']
                        : $id);

        ?>
  <li><a href='<?= $paneUrl ?>'><span><?= $section['title'] ?></span></a></li><?php

        $paneHtml .= "<div id='{$id}'>"
                  .    "<ul id='{$id}-cmds' class='{$paneCss}'>";
        foreach ($section['cmds'] as $cmd)
        {
            $cmdId      = preg_replace('/\s+/', '', strtolower($cmd['title']));
            $cmdFullId  = $id .'-'. $cmdId;

            $state      = ((empty($this->cmd) && ($cmd['expanded'] === true)) ||
                           ($this->cmd === $cmdId)
                                ? 'expanded'
                                : 'collapsed');

            /*
            Connexions::log("view/scripts/settings/index.phtml: "
                            . "section[ %s ], cmd[ %s ], state[ %s ]",
                            $id, Connexions::varExport($cmd), $state);
            // */

            $sectHtml  = '';
            $paneHtml .= "<li class='collapsable {$cmdFullId}'>"
                      .   "<h3 class='toggle {$state}'>";

            if (isset($cmd['async']) && ($cmd['async'] === true))
            {
                $cmdUrl = $this->view->url
                        .   '?format=partial'
                        .   '&part='. $cmd['script'];

                /*
                Connexions::log("view/scripts/settings/index.phtml: "
                                . "section[ %s ], cmd[ %s ]: url[ %s ]",
                                $id, $cmd['title'], $cmdUrl);
                // */

                $paneHtml .= "<a href='{$cmdUrl}'>{$cmd['title']}</a>";
            }
            else
            {
                $script    = 'settings/'. $cmd['script'] .'.phtml';
                $paneHtml .= "<span>{$cmd['title']}</span>";

                $sectHtml  = "<div class='content'>"
                           .    $this->render($script)
                           . "</div>";
            }

            $paneHtml .=  "</h3>"
                      .  $sectHtml
                      .  "</li>";
        }
        $paneHtml .=  "</ul>"
                  .  "</div>";

        $tabNum++;
    }

?>
 </ul>
 <?= $paneHtml ?>
</div>
<?php

/*********************************************************************
 * Now that we've had a chance to see which tab should be selected,
 * generate the Javascript to create a ui.tabs instance.
 */
$jQuery = $this->jQuery();
$jQuery->addJavascriptFile($this->baseurl('js/connexions-full.js'))
       ->addJavascriptFile($this->baseurl('js/settings-full.js'))
       ->addOnLoad("settings_onLoad();")
       ->javascriptCaptureStart();
?>
/************************************************
 * Initialize the settings tabs
 *
 */
function settings_onLoad()
{
    var $el         = $('#settings');
    var $tab        = null;

    var _sendPre    = function() {
        // Mask the tab panel area...
        var sel = $el.tabs('option', 'selected');
        $tab = $el.find('.ui-tabs-panel').eq(sel);

        $tab.mask();
    };

    var _sendPost   = function() {
        $tab.unmask();
    };

    $el.tabs({
        cache:      true,
        cookie:     'settings',
        selected:   <?= $tabSelected ?>,
        ajaxOptions: {
            beforeSend: _sendPre,
            complete:   _sendPost
        }
    });

    $el.find('.collapsable').collapsable({
        cache:  true,
        cookie: 'settings',
        ajaxOptions: {
            beforeSend: _sendPre,
            complete:   _sendPost
        }
    });
}

<?php
    $jQuery->javascriptCaptureEnd();

?>

<div class='error'><?= (@isset($this->error) ? $this->error : '') ?></div>
