<?php
/** @file
 *
 *  View script for TagsController::index with incoming members:
 *      viewer                  The Model_User instance representing the
 *                              current viewer;
 *      userInfo                A Connexions_Set_Info instance containing
 *                              information about the requested users;
 *      tagSet                  The Model_TagSet representing the tags to
 *                              present;
 *      paginator               The paginator to use in presenting 'tagSet';
 *
 *      tagsStyle               The presentation style to use for tags
 *                              (Connexions_View_Helper_HtmlTagCloud::STYLE_*);
 *      tagsHighlightCount      The number of tags to highlight;
 *      tagsSortBy              Sort tags by (valid field of Model_Tag);
 *      tagsSortOrder           Tag sort order;
 *
 *      sbUsersStyle            Style of display for the sidebar user "cloud"
 *                              (Connexions_View_Helper_HtmlTagCloud::STYLE_*);
 *      sbUsersPerPage          Maximum number of users to present in the
 *                              "tag cloud" sidebar presentation;
 *      sbUsersHighlightCount   The number of users to highlight in the
 *                              sidebar;
 *
 *      sbUsersSortBy           Sort users in the sidebar by
 *                              (valid field of Model_User);
 *      sbUsersSortOrder        Sidebar User sort order.
 */

$this->headTitle('Tags');

?>
<div class='columnHeader'>
 <div class='connexions_sprites tag_bg
             ui-corner-left ui-corer-tr'>&nbsp;</div>
 <p>
  <?php
    if ( $this->userInfo && $this->userInfo->hasValidItems())
    {
            if (count($this->userInfo->validIds) == 1)
                echo "All tags used by user ";
            else
                echo "Those tags in common to users ";

            echo "'{$this->userInfo->validItems}'.";
    }
    else
        printf ("All tags.");
  ?>
 </p>
</div>

<?php

// Present the current scope information
echo $this->htmlItemScope($this->paginator,
                          $this->userInfo,
                          'Users',
                          'owners',
                          array('Tags'  => $this->baseUrl('/tags')));

/* Present the pagination control.
 * Default values are established via Bootstrap.php::_initViewGlobal().
 */
$uiHelper = $this->htmlPaginationControl();
$uiHelper->setPrefix('tags');

echo $uiHelper->render($this->paginator, 'pagination-top', true);

if (count($this->paginator))
{
    $tagList = new Connexions_Set_ItemList($this->paginator,
                                           new Connexions_Set_Info(''),
                                           '/tagged');

    $tagIds = array();
    foreach ($tagList as $tag)
    {
        array_push($tagIds, $tag->tagId);
    }

    // Create a user set for all users that have this set of tags
    $userSet        = new Model_UserSet( $tagIds );
    $userSet->withAnyTag()
            ->weightBy('tag');
    
    // Since we're caching objects, we MUST modify the $viewer object...
    $this->viewer->weightBy('tag', $tagIds);

    $this->userList = $userSet->get_Tag_ItemList(0, $this->sbUsersPerPage,
                                                    $this->userInfo);

    $time_start = microtime(true);
    $html = "<div class='columnHeader'>"
          .  "<div class='connexions_sprites user_bg "
          .              "ui-corner-left ui-corer-tr'>&nbsp;</div>"
          .  "<p>"
          .   "All people that have at least one of "
          .   "the currently presented tags."
          .  "</p>"
          . "</div>"
          . "<div id='tagItems'>";

    /* Use the Connexions_View_Helper_HtmlTagCloud class to render a "Tag
     * Cloud" view of the user list.
     */
    $uiHelper = $this->htmlTagCloud();
    $uiHelper->setPrefix('sbUsers');

    $html .= $uiHelper->render($this->userList,
                               $this->sbUsersStyle,
                               $this->sbUsersSortBy,
                               $this->sbUsersSortOrder,
                               $this->sbUsersHighlightCount);

    $time_end   = microtime(true);

    $html .= sprintf ("\n<!-- %f seconds to render tag cloud -->\n",
                      $time_end - $time_start)
          . "</div>";

    $this->layout()->right = $html;


    // Present the tags
    $uiHelper->setPrefix('tags')
             ->setShowRelation(false);
    echo $uiHelper->render($tagList,
                           $this->tagsStyle,
                           $this->tagsSortBy,
                           $this->tagsSortOrder,
                           $this->tagsHighlightCount);
}

echo $this->htmlPaginationControl($this->paginator);

?>


<div class='error'><?= (@isset($this->error) ? $this->error : '') ?></div>
