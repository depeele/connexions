<?php
$this->headTitle('Join');

$jQuery = $this->jQuery();
$jQuery->addStylesheet($this->baseUrl('css/auth.min.css'));

$fullName = $this->fullName;
$email    = $this->email;

// /*
Connexions::log("register.phtml: includePki[ %s ], includePassword[ %s ], "
                . "autoSignin[ %s ]",
                Connexions::varExport($this->includePki),
                Connexions::varExport($this->includePassword),
                Connexions::varExport($this->autoSignin));
// */

$pkiInfo =& $this->pkiInfo;

if (empty($this->user) && $pkiInfo)
{
    $this->user = $pkiInfo['name'];
    $email      = $pkiInfo['email'];
    $fullName   = $pkiInfo['fullName'];
}

?>
<div id="auth" class='ui-validation-form ribbon-form line'><!-- { -->
 <div class='context-ribbon'>&nbsp;</div>
 <div class="legend unit"><!-- { -->
  <h1>Join</h1>
  <p>
   or <?= Connexions::anchor('/auth/signIn', 'Sign In') ?>
  </p>
 </div><!-- legend } -->
 <div class="userInput lastUnit"><!-- { -->
  <form method='post'>
   <?php if (! empty($fullName)) { ?>
   <input type='hidden' name='fullName' value='<?= $fullName ?>' />
   <?php } ?>
   <?php if (! empty($email)) { ?>
   <input type='hidden' name='email' value='<?= $email ?>' />
   <?php } ?>
   <div class='field username'>
    <label for='user'>Desired User Name / ID</label>
    <input type='text' class='text required' autocomplete='off'
           name='user' value='<?= $this->user ?>'
                    tabindex='1' />
    <div class='ui-field-info'>
     <div class='ui-field-status'></div>
    </div>
   </div>
   <fieldset class='credentials'>
    <legend>Credentials</legend>
   <?php
   if ($pkiInfo)
   {
       /* We have a valid SSL client certificate so offer it as a valid
        * credential.
        */
       ?>
    <div class='note'>
     Select the credentials you would like to use &mdash; PKI, Password, or
     both.
    </div>
    <fieldset class='pki'>
     <legend>
      <input id='includePki'
             type='checkbox'
             name='includePki'
             value='true'<?= ($this->includePki
                                  ? " checked='true'"
                                  : '') ?> />
      PKI
     </legend>
     <span class='dn'
      ><span class='ui-icon'
       ><span class='connexions_sprites type-certificate'></span></span>
       <?= $pkiInfo['subject'] ?></span>
     <div class='field options'>
      <label for='autoSignin'>Automatic sign-in via PKI?</label>
      <input id='autoSignin'
             type='checkbox'
             name='autoSignin'
            value='pki'<?= ( preg_match('/(\s*,\s*)?pki(\s*,\s*)?/',
                                        $this->autoSignin)
                                 ? " checked='true'"
                                 : '') ?> />
     </div>
    </fieldset>
       <?php
   }

   if ($pkiInfo)
   {
       ?>
    <fieldset class='userpassword'>
     <legend>
      <input id='includePassword'
             type='checkbox'
             name='includePassword'
             value='true'<?= ($this->includePassword && (! $this->includePki)
                                  ? " checked='true'"
                                  : '') ?> />
      Password
     </legend>
        <?php
   }
    ?>
     <div class='field'>
      <label for='password'>Password</label>
      <input type='password' class='text required' autocomplete='off'
            name='password'  value='<?= $this->pass ?>'
                          tabindex='2' />
      <div class='ui-field-info'>
       <div class='ui-field-status'></div>
      </div>
     </div>
     <div class='field'>
      <label for='password2'>Re-type Password for verfication</label>
      <input type='password' class='text required' autocomplete='off'
             name='password2'
                          tabindex='3' />
      <div class='ui-field-info'>
       <div class='ui-field-status'></div>
      </div>
     </div>
    <?php
    if ($pkiInfo)
    {
        ?>
    </fieldset>
        <?php
    }
    ?>
   </fieldset>
   <div class='field buttons'>
    <button name='cancel' tabindex='4'>Cancel</button>
    <button name='submit' tabindex='5'>Join Connexions</button>
   </div>
  </form>
  <div class='status<?= (@isset($this->error) ? ' error' : '') ?>'>
   <?= (@isset($this->error) ? $this->error : '') ?>
  </div>
 </div><!-- userInput } -->
</div><!-- ribbon-form } -->
<script type='text/javascript'>
(function($) {
    // Initialize the form handlers
    var $container  = $('#auth');
    var $form       = $container.find('form:first');

    /* Passwords have a custom, synchronous validator that we need to
     * bind BEFORE instantiating the validationForm so we can syncrhonously
     * perform validation as needed.
     */
    var pass1Name        = 'password';
    var pass2Name        = 'password2';
    var $user            = $form.find('input[name=user]');
    var $passArea        = $form.find('fieldset.userpassword');
    var $pass            = $form.find('input[type=password]');
    var $pass1           = $form.find('input[name='+ pass1Name +']');
    var $pass2           = $form.find('input[name='+ pass2Name +']');
    var $pki             = $form.find('fieldset.pki');
    var $includePassword = $form.find('input[name=includePassword]');
    var $includePki      = $form.find('input[name=includePki]');
    var $status          = $container.find('.status');

    function validate_user($user, name)
    {
        var stat    = $user.input('isValid');
        /* :XXX: If the stat is currently 'undefined', we will be returned an
         *       object which we need to convert BACK to 'undefined' so we
         *       don't toggle the state (undefined => object) causing the CSS
         *       class to be changed, causing a flicker from undefined to
         *       invalid.
         */
        if ((stat !== true) && (stat !== false))
        {
            stat = undefined;
        }
    
        if (name.length > 2)
        {
            // Perform a JSONP call to see if this user name is in use
            $.getJSON('<?= $this->baseUrl('auth/checkuser') ?>?jsonp=?',
                {format:   'json',
                 userName: name},
                 function(data) {
                    if (data.error !== undefined)
                        $user.input('valid', data.error.message);
                    else
                        $user.input('valid', true);
                 });
        }
    
        // Regardless, don't change the current validation.
        return stat;
    }

    $container.delegate('input[name=autoSignin]', 'click', function(e) {
        $.changeAutoSignin( $(this) );
    });

    $container.delegate('form', 'complete', function() {
        /* Registration is complete -- either via successful save or cancel
         *
         * Our action now is determined by whether or not 'closeAction' was
         * specified in the request.  Valid closeActions are:
         *  - 'back'                move back in the browser's history;
         *  - 'close'               attempt to close the current window;
         *  - 'hide'                hide the ribbon-form;
         *  - 'iframe'              attempt to invoke the 'close' function
         *                          on the containing iframe;
         *  - 'redirect:%url%'      redirect to the specified %url;
         *  - 'urlCallback:%url%'   redirect to the specified %url;
         *  - 'callback:%func%'     invoke the Javascript function %func%;
         *  - 'ignore'              do nothing;
         *
         * If 'closeAction' was NOT specified, 'back' will be used.
         */
        var action  = '<?= $this->closeAction ?>';

        $.closeAction(action, $container);
    });

    $(document).ready(function() {
        $user.input({
            hideLabel:  false,
            validation: function(val) {
                return validate_user($(this), val);
            }
        });

        $pass.input({
            validation: function() {
                return $.validatePasswords($(this), $pass1, $pass2);
            }
        });

        $includePki.bind('change', function() {
            var included    = $includePki.is(':checked');
            $form.validationForm('option',
                                 'disableSubmitOnUnchanged',
                                 (included || $includePassword.is(':checked')
                                    ? false : true));

            $form.validationForm('validate');

            // Handle (en/dis)abling the pki area
            var $fields = $pki.find('> .field, > .dn');
            var $inputs = $fields.find('input');
            if (included)
            {
                $fields.removeClass('ui-state-disabled');
                $inputs.removeAttr('disabled');
            }
            else
            {
                $fields.addClass('ui-state-disabled');
                $inputs.attr('disabled', true);
            }
        });

        $includePassword.bind('change', function() {
            var included    = $includePassword.is(':checked');
            $form.validationForm('option',
                                 'disableSubmitOnUnchanged',
                                 (included || $includePki.is(':checked')
                                    ? false : true));

            // Handle (en/dis)abling the pki area
            var $fields = $passArea.find('> .field');
            var $inputs = $fields.find('input');
            if (included)
            {
                $fields.removeClass('ui-state-disabled');
                $inputs.removeAttr('disabled');
            }
            else
            {
                $fields.addClass('ui-state-disabled');
                $inputs.attr('disabled', true);

                // Clear out any existing password values.
                $pass1.val('');
                $pass2.val('');
            }

            $form.validationForm('validate');
        });

        var firstValidation = true;
        $form.validationForm({
            //$validation:              $status,
            disableSubmitOnUnchanged: ($includePki.is(':checked')
                                        ? false : true),
            validate:   function() {
                var res = $user.input('isValid');
                if (res === true)
                {
                    var includePki      = $includePki.is(':checked'),
                        includePassword = $includePassword.is(':checked');

                    if (includePki)
                    {
                        // We simply need two matching (even if empty) passwords
                        res = ($pass1.val() == $pass2.val());
                    }
                    else if (includePassword)
                    {
                        // We need two matching, non-empty passwords
                        res = $.validatePasswords($pass1, $pass1, $pass2);
                    }
                    else
                    {
                        // We need at least one of Pki/Password
                        res = false;
                    }
                }

                if (res == true)
                {
                    if (firstValidation)
                    {
                        firstValidation = false;
                    }
                    else
                    {
                        $status.text('');
                    }
                }

                return res;
            }
        });

        $includePki.trigger('change');
    });
}(jQuery));

</script>
