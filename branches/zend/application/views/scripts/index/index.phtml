<?php
/** @file
 *
 *  View script for IndexController::index to render the main content.
 *
 *  The Connexions_View_Helper_HtmlBookmarks helper MUST be initialized
 *  before this view is rendered.
 *
 *  Incoming members:
 *      url             The full url for the main controller of this page;
 *      owner           The owner of the current item set -- either a string or
 *                      a Model_User instance;
 *      viewer          The Model_User instance representing the current
 *                      viewer;
 *      tags            A Model_Set_Tag instance containing information about
 *                      any requested tags (i.e. tag restrictions);
 *
 *      main            An array of settings for the main body:
 *          namespace       The cookie/parameters/settings namespace for the
 *                          main body;
 *          viewer          The Model_User instance representing the current
 *                          viewer (typically a reference to $view->viewer);
 *          users           The Model_User or Model_Set_User instance
 *                          representing the user(s) that partially define the
 *                          scope of this view
 *                          (typically a reference to $view->owner);
 *          tags            The Model_Tag or Model_Set_Tag instance  
 *                          representing the tag(s) that partially define the
 *                          scope of this view
 *                          (typically a reference to $view->tags);
 *
 *          displayStyle    Indicates the current presentation style -- if this
 *                          is an array, the style is 'custom';
 *          perPage         The number of results on a single page;
 *          page            The desired page of results;
 *          sortBy          Indicates the sort field used to retrieve the
 *                          current bookmark set;
 *          sortOrder       Indicates the sort order used to retrieve the
 *                          current bookmark set;
 */

// Prepare the HTML Bookmarks helper
$htmlBookmarks = $this->htmlBookmarks( $this->main );


// Let the side-bar helper know about the bookmarks being presented.
$bookmarks = $htmlBookmarks->bookmarks;

Connexions::log("index.phtml: Notify sidebar of %d bookmarks",
                count($bookmarks));
$this->htmlSidebar(array('items' => $bookmarks));

// Prepare the Html Item Scope helper
if ($this->owner === '*')
{
    $scopePath = array('Bookmarks' => $this->baseurl('/bookmarks'));
}
else
{
    $ownerStr = $this->owner->name;

    $scopePath = array($ownerStr => $this->baseurl($ownerStr));
}

$scopeQuery = array('format=json',
                    'method=autocomplete');
if (count($this->tags) > 0)
{
    array_push($scopeQuery, 'tags='. $this->tags);
}

$htmlItemScope = $this->htmlItemScope( array(
                    'namespace'         => $this->namespace,
                    'items'             => $htmlBookmarks->paginator,
                    'scope'             => $htmlBookmarks->tags,
                    'inputLabel'        => 'Tags',
                    'inputName'         => 'Tags',
                    'path'              => $scopePath,
                    'autoCompleteUrl'   => $this->url()
                                            .'?'. implode('&', $scopeQuery),
                 ));

//Connexions_Profile::checkpoint('Connexions', 'IndexView begin');

$baseUrl = $this->baseUrl('/'); //Connexions::url('/');

$links = $this->headLink();
$links->appendStylesheet($baseUrl .'css/bookmarks.css');

?>
<div class='columnHeader'>
 <div class='context-bg connexions_sprites bookmark_bg
             ui-corner-left ui-corner-tr'>&nbsp;</div>
 <p>Bookmarks of <?= ($this->owner === '*'
                            ? 'all users'
                            : $this->owner) ?>
    <?php
        if (($this->owner instanceof Model_User) &&
            (! empty($this->owner->pictureUrl)) )
        {
            printf ("<img class='avatar' src='%s' title='%s' />\n",
                    $this->owner->pictureUrl,
                    $this->owner->fullName);
        }
    ?>
    <br />
  <?php
    if ( count($this->tags) > 0)
        printf ("with tags '%s'.", $this->tags);
    else
        printf ("NO tags.");
  ?>
 </p>
</div>

<?php
//Connexions_Profile::checkpoint('Connexions', 'IndexView render scope');

echo $htmlItemScope->render();

//Connexions_Profile::checkpoint('Connexions', 'IndexView render items');

echo $htmlBookmarks->render();
?>

<div class='error'><?= (@isset($this->error) ? $this->error : '') ?></div>

<?php

//Connexions_Profile::checkpoint('Connexions', 'IndexView complete');
