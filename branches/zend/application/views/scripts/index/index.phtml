<?php
/** @file
 *
 *  View script for IndexController::index with incoming members:
 *      viewer      The Model_User instance representing the current viewer;
 *      owner       The owner of the current item set -- either a string or a
 *                  Model_User instance;
 *      tagInfo     A Connexions_Set_Info instance containing information about
 *                  the requested tags;
 *      userItems   The Model_UserItemSet representing the items to present;
 *      paginator   The paginator to use in presenting 'userItems';
 *
 *      maxTags     Maximum number of tags to present;
 *      sortBy      Sort tags by (valid field of Model_Tag);
 *      sortOrder   Tag sort order.
 */

if ($this->owner !== '*')
    $this->headTitle($this->owner ."'s Bookmarks");
else
    $this->headTitle('Bookmarks')

?>
<p>Present the Bookmarks for <?= $this->owner ?>
                         to  <?= $this->viewer ?>
<?php   if ( $this->tagInfo->hasValidItems())
            printf (" with tags '%s'", $this->tagInfo->validItems);
        else
            printf (", NO tags.");
?>
</p>

<?php
if ( @isset($this->userItems) )
{
    /* If $this->tagList is NOT set and we have 1 or more userItems, make use
     * of the 'userItems' Model_UserItemSet instance to retrieve the tags for
     * these userItems (specifically, for the unique items and unique users
     * represented by these userItems).
     */
    if ((! @isset($this->tagList)) && (count($this->userItems) > 0))
    {
        $userIds = $this->userItems->userIds();

        // Create a tag set and then retrieve its Tag_ItemList adapter
        $tagSet        = new Model_TagSet( $userIds,
                                           $this->userItems->itemIds() );
        if ($this->owner === '*')
            $tagSet->withAnyUser();

        /*
        Connexions::log(
                sprintf("View Index: %s users, tag sql[ %s ]",
                            ($this->owner === '*' ? '*' : count($userIds)),
                            $tagSet->select()->assemble()));
        // */

        $this->tagList = $tagSet->get_Tag_ItemList(0, $this->maxTags,
                                                   $this->tagInfo,
                                                   ($this->owner !== '*'
                                                        ? null
                                                        : '/tagged'));
    }
}

if ( @isset($this->tagList))
{
    $time_start = microtime(true);

    /* Use the Connexions_View_Helper_HtmlTagCloud class to render the tag
     * cloud for $this->tagList.
     */
    $this->layout()->right = $this->htmlTagCloud($this->tagList,
                                                 $this->sortBy,
                                                 $this->sortOrder);

    $time_end   = microtime(true);
    $this->layout()->right .= sprintf ("%f seconds to render tag cloud<br />\n",
                                       $time_end - $time_start);
}

/* Present the pagination control, established by
 * Bootstrap.php::_initViewGlobal() to be rendered via:
 *      views/scripts/paginationControl.phtml
 */
echo $this->paginator;

if (count($this->paginator))
{
    // Present the items of the current page
    echo "<ul class='items'>\n";
    foreach ($this->paginator as $idex => $userItem)
    {
        /* Present the current item -- This should probably be via a view
         * partial like:
         *      view/scripts/userItem.phtml
         */
        //$userItem = new Model_UserItem($item);
        echo $this->partial('userItem.phtml',
                            array(
                                'index'    => $idex,
                                'userItem' => &$userItem,
                                'viewer'   => &$this->viewer
                            ));
    }
    echo "</ul>\n";
}

echo $this->paginator;

?>


<div class='error'><?= (@isset($this->error) ? $this->error : '') ?></div>
