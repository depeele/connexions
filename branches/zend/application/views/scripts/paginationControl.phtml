<?php
/** @file
 *
 *  Render this user item page with pagination controls.
 *
 *  $this implements the Zend_View_Interface and has at least the following
 *  members/methods:
 *      pageCount
 *      itemCountPerPage
 *      first
 *      current
 *      last
 *      next
 *      pagesInRange [ 1:1, 2:2, 3:3 ]
 *      firstPageInRange
 *      lastPageInRange
 *      currentItemCount
 *      totalItemCount
 *      firstItemNumber
 *      lastItemNumber
 */

if ($this->pageCount < 2)
    return;

$marker         = array('first' => '&laquo;',   //'&#x00ab',    //'&laquo;',
                        'prev' => '&lsaquo;',  //'&#x2039',    //'&lsaquo;',
                        'next' => '&rsaquo;',  //'&#x203a',    //'&rsaquo;',
                        'last' => '&raquo;'    //'&#x00bb',    //'&raquo;',
                );
$cssClass       = 'ui-corner-all';
$perPageChoices = array(10, 25, 50, 100, 250, 500);


echo "<div class='pagination'>\n",  // { pagination
          "<div class='info'>\n";   // { info
/*
printf (      "<div class='itemCount'>"
        .       "<span class='label'>Items:</span>"
        .       "<span class='count %s'>%s</span>"
        .     "</div>",
        $cssClass, number_format($this->totalItemCount));
 */

printf (      "<div class='perPage'>"
        .       "<span class='label'>items per page</span>"
        .       "<select class='count %s' name='perPage'>",
        $cssClass);

foreach ($perPageChoices as $perPage)
{
    printf (     "<option value='%s'%s>%s</option>",
                 $perPage,
                 ($perPage == $this->itemCountPerPage
                    ? ' selected'
                    : ''),
                 $perPage);
}

printf (        "</select name='perPage'>"
        .     "</div>"
        .     "<div class='itemRange'>"
        .       "<span class='label'>Items</span>"
        .       "<span class='count %s'>%s - %s</span>"
        .     "</div>"
        . "</div>\n",   // info }
        $cssClass, number_format($this->firstItemNumber),
                   number_format($this->lastItemNumber));

/*
printf (  "<div class='info'>"
        .     "%s items per page, "
        .     "%s items, "
        .     "%s pages, "
        .    "page %s, "
        .    "items %s-%s"
        . "</div>\n",
        number_format($this->itemCountPerPage),
        number_format($this->totalItemCount),
        number_format($this->pageCount),
        number_format($this->current),
        number_format($this->firstItemNumber),
        number_format($this->lastItemNumber));
 */

echo "<div class='pager'>\n";   // { pager

// Present the pages BEFORE the current range
if ($this->firstPageInRange > $this->first)
{
    printf (    "<a class='ends left %s' href='?page=%s' "
              .                     "title='Previous Page'>%s</a>"
              . "<a class='%s' href='?page=%s'>%s</a>",
            $cssClass, $this->previous, $marker['prev'],
            $cssClass, $this->first,    ($this->first));

    if ($this->firstPageInRange > ($this->first + 1))
        printf ("<a class='%s' href='?page=%s'>%s</a>",
                $cssClass, $this->first + 1, ($this->first + 1));

    if ($this->firstPageInRange > ($this->first + 2))
        printf("<span class='skip %s'>...</span>",
               $cssClass);
}
else
{
    if (@isset($this->previous))
        printf ("<a class='ends left %s' href='?page=%s' "
                .                   "title='Previous Page'>%s</a>",
                $cssClass, $this->previous, $marker['prev']);
    else
        printf ("<span class='ends left disabled %s' "
                .               "title='Previous Page'>%s</span>",
                $cssClass, $marker['prev']);
}

// Present the pages within the current range
foreach ($this->pagesInRange as $page)
{
    if ($page == $this->current)
        printf ("<span class='current %s'>%s</span>",
                $cssClass, ($page));
    else
        printf ("<a class='%s' href='?page=%s'>%s</a>",
                $cssClass, $page, ($page));
                //$this->url(array('page' => $page)), $page);
}


// Present the pages AFTER the current range
if ($this->lastPageInRange < $this->last)
{
    if ($this->lastPageInRange < ($this->last - 2))
        printf ("<span class='skip %s'>...</span>",
                $cssClass);

    if ($this->lastPageInRange < ($this->last - 1))
        printf ("<a class='%s' href='?page=%s'>%s</a>",
                $cssClass, $this->last - 1, ($this->last - 1));

    printf (    "<a class='%s' href='?page=%s'>%s</a>"
              . "<a class='ends right %s' href='?page=%s' "
              .                         "title='Next Page'>%s</a>",
            $cssClass, $this->last, ($this->last),
            $cssClass, $this->next, $marker['next']);
}
else
{
    if (@isset($this->next))
        printf ("<a class='ends right %s' href='?page=%s' "
                .                      "title='Next Page'>%s</a>",
                $cssClass, $this->next, $marker['next']);
    else
        printf ("<span class='ends right disabled %s' "
                .                   "title='Next Page'>%s</span>",
                $cssClass, $marker['next']);
}

echo  "</div>\n",                   // pager }
      "<br class='clear' />\n",
     "</div>\n";                    // pagination }

/*
echo "<pre>this:\n";
print_r($this);
echo "</pre>\n";
// */

?>
