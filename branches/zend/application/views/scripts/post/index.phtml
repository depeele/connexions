<?php
if (! @is_array($this->postInfo))
    $this->postInfo = array();
//$this->postInfo['url'] = 'url://to-edit/';

$this->headTitle('Save a Bookmark');

$jQuery = $this->jQuery();
$jQuery->addStylesheet($this->baseUrl('css/post.css'));
$jQuery->addJavascriptFile($this->baseUrl('js/ui.stars.js'));
$jQuery->addJavascriptFile($this->baseUrl('js/ui.checkbox.js'));
$jQuery->addJavascriptFile($this->baseUrl('js/ui.button.js'));
$jQuery->addJavascriptFile($this->baseUrl('js/ui.input.js'));

//$noConflict = Zend_JQuery_View_Helper_JQuery::getJQueryHandler();

$jQuery->addOnLoad('post_onLoad();');

$jQuery->javascriptCaptureStart();
?>

/************************************************
 * Initialize the post form handlers
 *
 */
var $form       = null;
var $submit     = null;
var $error      = null;

function post_onLoad()
{
    $form   = $('#post form');
    $form.hide();   // hide while we prepare....

    $form.addClass('ui-form');

    $error  = $('.formError');
    $submit = $('#post button[name=submit]');

    $submit.button({ priority:'primary', enabled:false});
    $('#post button[name=cancel]').button({ priority:'secondary'});

    // Rating
    $('#post .stars-wrapper').stars({
        captionEl:          $('label[for=rating]'),
        baseClass:          'connexions_sprites',
        mirrorCss:          true,

        cancelClass:        'star_0',
        cancelHoverClass:   'star_0_hover',
        cancelDisabledClass:'star_0_off',

        starClass:          'star_1',
        starOnClass:        'star_1_on',
        starHoverClass:     'star_1_hover',
        starDisabledClass:  'star_1_off'
    });

    // Favorite
    $('#post input[name=isFavorite]').checkbox({
            css:        'connexions_sprites',
            cssOn:      'star_fill',
            cssOff:     'star_empty',
            titleOn:    'Favorite: click to remove from Favorites',
            titleOff:   'Click to add to Favorites',
            useElTitle: false,
            hideLabel:  true
    });

    // Privacy
    $('#post input[name=isPrivate]').checkbox({
            css:        'connexions_sprites',
            cssOn:      'lock_fill',
            cssOff:     'lock_empty',
            titleOn:    'Private: click to share',
            titleOff:   'Public: click to mark as private',
            useElTitle: false,
            hideLabel:  true
    });

    // Style all remaining input[type=text] / textarea controls with ui.input
    $('#post input[type=text],#post input[type=password],textarea')
            .bind('validationChanged.uiinput', function() {
                    validate_form();
                  })
            .input();

    $form.show();
}

function validate_form()
{
    var $required   = $('.required');
    var isValid     = true;

    $required.each(function() {
        if (! $(this).hasClass('ui-state-valid'))
        {
            isValid = false;
            return false;
        }
    });

    if (isValid)
    {
        $submit.button('enable');
        $error.text('');
    }
    else
    {
        $submit.button('disable');
    }
}

<?php
$jQuery->javascriptCaptureEnd();


?>
<div id="post">
 <div class="line"><!-- { -->
  <div class="legend unit"><!-- { -->
   <h1>Post</h1>
   <p>
    a new bookmark:
   </p>
  </div><!-- legend } -->
  <div class="userInput unit"><!-- { -->
   <form method='post'>
    <div class='field<?= (! @empty($this->postInfo['url'])
                                        ? ' click-to-edit'
                                        : '') ?>'>
     <div class='ui-field-status'></div>
     <label for='url'>URL</label>
     <input type='text' class='text required' autocomplete='off'
           name='url' value='<?= $this->postInfo['url'] ?>' />
    </div>
    <div class='field'>
     <div class='ui-field-status'></div>
     <label for='name'>Name</label>
     <input type='text' class='text required' autocomplete='off'
            name='name' value='<?= $this->postInfo['name'] ?>' />
    </div>
    <div class='field'>
     <label for='description'>Description</label>
     <textarea class='text'
            name='description'><?= $this->postInfo['description'] ?></textarea>
    </div>
    <div class='field'>
     <div class='ui-field-status'></div>
     <label for='tags'>Tags</label>
     <input type='text' class='text required' autocomplete='off'
            name='tags' value='<?= $this->postInfo['tags'] ?>' />
    </div>
    <div class='personalize buttons ui-helper-clearfix'>
     <div class='field userRating'>
      <label for='rating'>rating</label>
      <div class='stars-wrapper'>
       <input name='rating' type='radio' value='1' title='Terrible'
             <?= ($this->postInfo['rating'] == '1'
                     ? " checked='true'" : '') ?> />
       <input name='rating' type='radio' value='2' title='Fair'
             <?= ($this->postInfo['rating'] == '2'
                     ? " checked='true'" : '') ?> />
       <input name='rating' type='radio' value='3' title='Average'
             <?= ($this->postInfo['rating'] == '3'
                     ? " checked='true'" : '') ?> />
       <input name='rating' type='radio' value='4' title='Good'
             <?= ($this->postInfo['rating'] == '4'
                     ? " checked='true'" : '') ?> />
       <input name='rating' type='radio' value='5' title='Excellent'
             <?= ($this->postInfo['rating'] == '5'
                     ? " checked='true'" : '') ?> />
      </div>
     </div>

     <div class='field favorite'>
      <label for='isFavorite'>Favorite</label>
      <input name='isFavorite'
            type='checkbox' value='true'
            <?= ($this->postInfo['isFavorite'] ? ' checked' : '') ?> />
     </div>

     <div class='field private'>
      <label for='isPrivate'>Private</label>
      <input name='isPrivate'
            type='checkbox' value='true'
            <?= ($this->postInfo['isPrivate'] ? ' checked' : '') ?> />
     </div>
     <button name='submit'>Save</button>
     <button name='cancel'>Cancel</button>
    </div>
   </form>
   <div id='tags'>
     Tag selection area.
   </div>
 
   <div class='formError'>
    <?= (@isset($this->error) ? $this->error : '') ?>
   </div>
  </div><!-- userInput } -->
 </div><!-- line } -->
</div>
