<?php
/** @file
 *
 *  This is used to begin the streaming output of import results.
 *  The incoming view parameters should be:
 *      state       The current processing state
 *
 *  In-stream output is generated by:
 *      post-bookmarks-import-stream-begin.phtml        // Begin the stream
 *      post-bookmarks-import-stream-bookmark.phtml     // valid bookmark
 *      post-bookmarks-import-stream-error.phtml        // import error
 *      post-bookmarks-import-stream-warning.phtml      // import warning
 *
 *  The stream is ended with:
 *      post-bookmarks-import.phtml                     // Final results
 */

$tagStr     = implode(', ', $this->state['tagStack']);
$tagLabel   = 'tag' .(count($this->state['tagStack']) > 1 ? 's' : '');

$test       = ($this->state['test'] === 'yes'
                ? 'Testing '
                : '');
$visibility = $this->state['visibility'];
$conflict   = ($this->state['conflict'] === 'replace'
                ? 'replacing'
                : 'keeping');
?>
<html>
<head>
 <title>Bookmark Import</title>
 <link href='<?= Connexions::url('/css/themes/default/jquery-ui.css') ?>'
       media='screen' rel='stylesheet' type='text/css' />
 <link href='<?= Connexions::url('/css/connexions.css') ?>'
       media='screen' rel='stylesheet' type='text/css' />
 <link href='<?= Connexions::url('/css/settings.css') ?>'
       media='screen' rel='stylesheet' type='text/css' />
 <link href='<?= Connexions::url('/css/bookmarks.css') ?>'
       media='screen' rel='stylesheet' type='text/css' />
</head>
<body id='bookmark-import'>
 <h3><?= $test ?>Import of bookmarks using default <?= $tagLabel ?>
        <span class='tags'><?= $tagStr ?></span>,
    default visibility of
        <span class='privacy <?= $visibility ?>'><?= $visibility ?></span>,
    <?= $conflict ?> existing bookmarks.</h3>
 <ul class='items bookmarks'>
