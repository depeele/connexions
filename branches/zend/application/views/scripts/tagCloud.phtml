<?php
/** @file
 *
 *  Given a Model_UserItemSet instance 'userItems', render a tag cloud for all
 *  tags of the userItems.
 *
 *  Incoming parameters:
 *      tags        A Model_TagSet instance representing the tags to be
 *                  presented;
 *      maxTags     The maximum number of tags to present [100];
 *      sortBy      The tag field to sort by ['tag'];
 *      sortOrder   Sort order ( ['ASC'] | 'DESC').
 */
if ( (! @isset($this->tags)) || (! $this->tags instanceof Model_TagSet) )
    return;

if (! @isset($this->maxTags))   $this->maxTags   = null;
if (! @isset($this->sortBy))    $this->sortBy    = 'tag';
if (! @isset($this->sortOrder)) $this->sortOrder = 'ASC';

printf ("maxTags[ %d ], sortBy[ %s ], sortOrder[ %s ]<br />\n",
        $this->maxTags, $this->sortBy, $this->sortOrder);

// Grab the Zend_Tag_ItemList adapter for our tag set.
$tagItemList = $this->tags->get_Tag_ItemList($this->maxTags);

// Create a sort function
$refA    = '$a["'. $this->sortBy .'"]';
$refB    = '$b["'. $this->sortBy .'"]';
$funcDef = '$cmp = '
         .       (strpos($this->sortBy, 'Count')
                        ? // Numeric comparison
                          $refA .'-'. $refB
                        : // String comparison
                          'strcasecmp('. $refA .','. $refB .')') .';'
         .  ( (($this->sortOrder === 'ASC') || ($this->sortOrder === 'asc'))
                    ? ''
                      // Reverse the comparison to reverse the ASC sort
                    : '$cmp = ($cmp < 0 '
                      .         '? 1 '
                      .         ': ($cmp > 0 '
                      .             '? -1 '
                      .             ': 0));')
       //. 'echo "a[",'. $refA .',"],b[", '. $refB .',"]: cmp[",$cmp,"]\n";'
         . 'return  $cmp;';
//printf ("funcDef[ %s ]<br />\n", $funcDef);
$sortFn  = create_function('$a,$b', $funcDef);


// Sort the tagItemList
$tagItemList->uasort($sortFn);

// Create a Zend_Tag_Cloud renderer and render the tag cloud
$cloud = new Zend_Tag_Cloud(
                array(
                    'ItemList'              => $tagItemList,
                    'CloudDecorator'        => array(
                        'decorator'         => 'htmlCloud',
                        'options'           => array(
                            'HtmlTags'      => array(
                                'ul'        => array(
                                    'class' =>'Tag_Cloud clearfix'
                                )
                            )
                        )
                    ),
                    'TagDecorator'          => array(
                        'decorator'         => 'htmlTag',
                        'options'           => array(
                            'HtmlTags'      => array(
                                'li'        => array(
                                    'class'=>'tag'
                                )
                            ),
                            'ClassList'     => array(
                                'size0', 'size1', 'size2', 'size3',
                                'size4', 'size5', 'size6'
                            )
                        )
                    )
                ));

echo $cloud->render();
