@mixin corners($tl, $tr: $tl, $br: $tr, $bl: $tl) {
  -moz-border-radius: $tl $tr $br $bl;
  -webkit-border-radius: $tl $tr $br $bl;
  -ms-border-radius: $tl $tr $br $bl;
  -khtml-border-radius: $tl $tr $br $bl;
  border-radius: $tl $tr $br $bl;
}

$ms_filter_base: unquote("progid:DXImageTransform.Microsoft.");

// 10% opcatiy: +opacity(10)
@mixin opacity($pct) {
  // Firefox, Safari, Opera, Chrome
  opacity: $pct / 100;

  // IE5-7
  filter: unquote("alpha(opacity=#{$pct})");

  // IE8
  -ms-filter: unquote("'#{$ms_filter_base}Alpha(Opacity=#{$pct})'");

  // KHTML, old Safari
  -khtml-opacity: $pct / 100;

  // Mozilla, Netscape
  -moz-opacity: $pct / 100;
}

@mixin rotate($deg) {
  display: block;
  -webkit-transform: unquote("rotate(") $deg unquote(")");
  -moz-transform: unquote("rotate(") $deg unquote(")");
  -ms-transform: unquote("rotate(") $deg unquote(")");
  -o-transform: unquote("rotate(") $deg unquote(")");
  // 0=0deg, 1=90deg, 2=180deg, 3=270deg
  @if $deg == 0deg {
    filter: unquote("#{$ms_filter_base}BasicImage(rotation=0)");
  }
  @if $deg == 90deg {
    filter: unquote("#{$ms_filter_base}BasicImage(rotation=1)");
  }
  @if $deg == -90deg {
    filter: unquote("#{$ms_filter_base}BasicImage(rotation=-1)");
  }
  @if $deg == 180deg {
    filter: unquote("#{$ms_filter_base}BasicImage(rotation=2)");
  }
  @if $deg == -180deg {
    filter: unquote("#{$ms_filter_base}BasicImage(rotation=-2)");
  }
  @if $deg == 270deg {
    filter: unquote("#{$ms_filter_base}BasicImage(rotation=3)");
  }
  @if $deg == -270deg {
    filter: unquote("#{$ms_filter_base}BasicImage(rotation=-3)");
  }
}

// inline-block normalization per:
//  http://foohack.com/2007/11/cross-browser-support-for-inline-block-styling/
@mixin inlineBlock() {
  // OLD Mozilla browsers
  display:  -moz-inline-stack;

  // Modern browsers
  display:  inline-block;

  // Trigger 'hasLayout' and set display to inline == inline-block
  zoom:     1;
  *display: inline;
}

// float clearfix per:
//    http://www.positioniseverything.net/easyclearing.html
//
//  MUST be WITHIN the CSS rule to which it is applied.
@mixin clearFix() {
  &:after {
    content: ".";
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;

    // IE
    *display: inline-block;
    zoom:     1;
    *display: block;
  }
}
